# ============================================================================
# VARIÁVEIS DE AMBIENTE - EPS CAMPANHAS (Backend)
# ============================================================================
# Descrição: Define todas as variáveis de ambiente necessárias para o backend
# NestJS e para a configuração do banco de dados PostgreSQL via Prisma.
#
# IMPORTANTE: Este arquivo contém credenciais sensíveis e NÃO deve ser
# commitado no Git. Adicione ".env" ao arquivo .gitignore.
# ============================================================================

# ----------------------------------------------------------------------------
# CONFIGURAÇÃO DO BANCO DE DADOS POSTGRESQL
# ----------------------------------------------------------------------------

## Usuário do banco de dados PostgreSQL
POSTGRES_USER=eps_admin

## Senha do banco de dados PostgreSQL
## PRODUÇÃO: Use uma senha forte e complexa (mínimo 16 caracteres)
POSTGRES_PASSWORD=eps_senha_segura_2025

## Nome do banco de dados principal
POSTGRES_DB=eps_campanhas_db

## Host do banco de dados
## Desenvolvimento: "localhost" (quando rodando Prisma CLI fora do Docker)
## Docker: "db" (nome do serviço Docker, quando backend rodar em container)
POSTGRES_HOST=localhost

## Porta do banco de dados PostgreSQL (padrão: 5432)
POSTGRES_PORT=5432

# ----------------------------------------------------------------------------
# DATABASE_URL - String de Conexão Prisma
# ----------------------------------------------------------------------------

## URL completa de conexão do Prisma Client
## Formato: postgresql://USUÁRIO:SENHA@HOST:PORTA/NOME_DB?schema=public
## Esta variável é lida pelo Prisma para conectar ao banco de dados
DATABASE_URL="postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?schema=public"

# ----------------------------------------------------------------------------
# CONFIGURAÇÕES DA APLICAÇÃO NESTJS
# ----------------------------------------------------------------------------

## Porta em que o servidor NestJS irá rodar
PORT=3000

## Ambiente de execução (development, production, test)
NODE_ENV=development

## Segredo para assinatura de tokens JWT (autenticação)
## PRODUÇÃO: Gere uma string aleatória de 64+ caracteres
## Exemplo: openssl rand -base64 64
JWT_SECRET=eps_jwt_secret_key_super_segura_mude_em_producao_2025

## Tempo de expiração do token JWT (ex: 1h, 7d, 30d)
JWT_EXPIRES_IN=7d

## Segredo para refresh tokens (opcional, para refresh token rotation)
JWT_REFRESH_SECRET=eps_jwt_refresh_secret_key_super_segura_mude_em_producao_2025

## Tempo de expiração do refresh token
JWT_REFRESH_EXPIRES_IN=30d

# ----------------------------------------------------------------------------
# CONFIGURAÇÕES DE EMAIL (Opcional - para recuperação de senha)
# ----------------------------------------------------------------------------

## Host do servidor SMTP (ex: smtp.gmail.com, smtp.sendgrid.net)
# SMTP_HOST=smtp.gmail.com

## Porta do servidor SMTP (587 para TLS, 465 para SSL)
# SMTP_PORT=587

## Usuário/email de autenticação SMTP
# SMTP_USER=seu-email@gmail.com

## Senha ou API Key do SMTP
# SMTP_PASSWORD=sua-senha-ou-api-key

## Email remetente padrão
# EMAIL_FROM=noreply@epscampanhas.com

# ----------------------------------------------------------------------------
# CONFIGURAÇÕES DE UPLOAD (Opcional - para avatares e imagens de prêmios)
# ----------------------------------------------------------------------------

## Provedor de storage (local, s3, cloudinary)
# STORAGE_PROVIDER=local

## Diretório local para uploads (se STORAGE_PROVIDER=local)
# UPLOAD_DIR=./uploads

## AWS S3 (se STORAGE_PROVIDER=s3)
# AWS_ACCESS_KEY_ID=sua-access-key
# AWS_SECRET_ACCESS_KEY=sua-secret-key
# AWS_S3_BUCKET=eps-campanhas-uploads
# AWS_REGION=us-east-1

# ----------------------------------------------------------------------------
# CONFIGURAÇÕES DE CORS (Cross-Origin Resource Sharing)
# ----------------------------------------------------------------------------

## URL do frontend permitida para requisições CORS
## Desenvolvimento: http://localhost:3001
## Produção: https://app.epscampanhas.com
CORS_ORIGIN=http://localhost:3001

# ----------------------------------------------------------------------------
# CONFIGURAÇÕES DE LOG E MONITORAMENTO
# ----------------------------------------------------------------------------

## Nível de log (error, warn, info, debug, verbose)
LOG_LEVEL=debug

## Habilitar logs detalhados do Prisma (true/false)
PRISMA_LOG=true

# ============================================================================
# FIM DO ARQUIVO .env
# ============================================================================
